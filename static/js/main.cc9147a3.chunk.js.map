{"version":3,"sources":["store/todoSlice.js","Components/Header/Header.js","Components/ItemButtons/ItemButtons.js","Components/TodoItem/TodoItem.js","Components/Body/Body.js","Components/editPopup/EditPopup.js","Components/App/App.js","store/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","todos","editPopup","show","itemId","text","newText","reducers","add","state","action","newItem","payload","push","remove","id","filter","item","popup","_action$payload","map","_todoSlice$actions","actions","selectTodos","todo","selectEditingId","selectPopupStatus","selectText","buttonStyle","width","xs","sm","Header","dispatch","useDispatch","_useState","useState","_useState2","Object","slicedToArray","val","setVal","_useState3","_useState4","error","setError","_useState5","_useState6","labelVal","setLabelVal","react_default","a","createElement","Box","sx","marginBottom","Grid","container","spacing","TextField","label","placeholder","size","multiline","fullWidth","value","onChange","e","inputValue","target","justifyContent","alignItems","Button","onClick","trim","nanoid","variant","Add_default","deleteColor","red","theme","createTheme","palette","delete","main","contrastText","ItemButtons","_ref","props","assign","ThemeProvider","Stack","Edit_default","color","Delete_default","TodoItem","Paper","elevation","p","Typography","Components_ItemButtons_ItemButtons","style","background","grey","paddingX","paddingY","borderRadius","Body","items","useSelector","length","Components_TodoItem_TodoItem","key","EditPopup","open","inputVal","setInputVal","closePopup","Dialog","maxWidth","onClose","DialogTitle","DialogContent","DialogActions","App","isPopupShow","minHeight","CssBaseline","Container","Components_Header_Header","Components_Body_Body","editPopup_EditPopup","store","configureStore","reducer","todoReducer","ReactDOM","render","es","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.cc9147a3.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState: {\n    todos: [],\n    editPopup: {\n      show: false,\n      itemId: '',\n      text: '',\n      newText: ''\n    }\n  },\n  reducers: {\n    add(state, action) {\n      const newItem = action.payload\n      state.todos.push(newItem)\n    },\n    remove(state, action) {\n      const id = action.payload\n      state.todos = state.todos.filter(item => item.id !== id)\n    },\n    popup(state, action) {\n      const {show, text, itemId, newText} = action.payload\n\n      state.editPopup.show = show\n      state.editPopup.text = text\n      state.editPopup.itemId = itemId\n\n      if(newText) {\n        state.todos.map(item => {\n          if(item.id === itemId) {\n            return item.text = newText\n          }\n          return state\n        })\n      }\n    }\n  }\n})\nexport const {add, remove, popup} = todoSlice.actions\nexport const selectTodos = state => state.todo.todos\nexport const selectEditingId = state => state.todo.editPopup.itemId\nexport const selectPopupStatus = state => state.todo.editPopup.show\nexport const selectText = state => state.todo.editPopup.text\nexport default todoSlice.reducer;","import React, {useState} from 'react'\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport {useDispatch} from \"react-redux\";\nimport {add} from '../../store/todoSlice'\nimport { nanoid } from 'nanoid'\n\nconst buttonStyle = {\n  width: {\n    xs: '100%',\n    sm: 'auto'\n  }\n}\nconst Header = () => {\n  const dispatch = useDispatch()\n  const [val, setVal] = useState('')\n  const [error, setError] = useState(false)\n  const [labelVal, setLabelVal] = useState('Input task')\n\n  const addItem = () => {\n    if(val.trim() === '') {\n      setError(true)\n      setLabelVal('Input not empty value')\n      setVal('')\n      return\n    }\n    setError(false)\n    setLabelVal('Input task')\n    setVal('')\n    dispatch(add({\n      id: nanoid(),\n      text: val\n    }))\n  }\n\n  const input = (e) => {\n    const inputValue = e.target.value\n    setVal(inputValue)\n  }\n\n  return (\n      <Box sx={{marginBottom: 2}}>\n        <Grid container spacing={{ xs: 2, sm: 0 }}>\n          <Grid item xs={12} sm={10}>\n            <TextField\n                error={error}\n                id=\"outlined-textarea\"\n                label={labelVal}\n                placeholder=\"Your task\"\n                size=\"normal\"\n                multiline\n                fullWidth\n                value={val}\n                onChange={input}\n            />\n          </Grid>\n          <Grid item container justifyContent=\"end\" alignItems=\"center\" xs={12} sm={2}>\n            <Button onClick={addItem} variant=\"contained\" size=\"large\" sx={buttonStyle}>\n              <AddIcon/>\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n  )\n}\n\nexport default Header","import React from \"react\";\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Stack from '@mui/material/Stack';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\nimport {useDispatch} from \"react-redux\";\nimport {remove, popup} from '../../store/todoSlice'\n\nconst deleteColor = red[900]\n\nconst theme = createTheme({\n  palette: {\n    delete: {\n      main: deleteColor,\n      contrastText: '#fff',\n    }\n  },\n});\n\nconst ItemButtons = ({...props}) => {\n  const {id, text} = props\n  const dispatch = useDispatch()\n\n  const deleteItem = () => {\n    dispatch(remove(id))\n  }\n\n  const showEditPopup = () => {\n    dispatch(popup({\n      show: true,\n      text: text,\n      itemId: id\n    }))\n  }\n\n  return (\n      <ThemeProvider theme={theme}>\n        <Stack spacing={2}>\n          <Button onClick={showEditPopup} variant=\"contained\">\n            <EditIcon/>\n          </Button>\n          <Button onClick={deleteItem} variant=\"contained\" color=\"delete\">\n            <DeleteIcon/>\n          </Button>\n        </Stack>\n      </ThemeProvider>\n  )\n}\n\nexport default ItemButtons","import React from \"react\";\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport ItemButtons from \"../ItemButtons/ItemButtons\";\nimport Typography from \"@mui/material/Typography\";\n\nconst TodoItem = ({...props}) => {\n  const {text, id} = props\n\n  return (\n      <Paper elevation={0} sx={{p: 2}}>\n        <Grid container spacing={{ xs: 2, sm: 0 }}>\n          <Grid item xs={10}>\n            <Typography variant=\"body1\">\n              {text}\n            </Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <ItemButtons text={text} id={id}/>\n          </Grid>\n        </Grid>\n      </Paper>\n  )\n}\n\nexport default TodoItem","import React from \"react\";\nimport Box from  '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport { grey } from '@mui/material/colors';\nimport {useSelector} from \"react-redux\";\nimport {selectTodos} from '../../store/todoSlice'\n\nconst color = grey[200]\nconst style = {\n  background: color,\n  paddingX: 1,\n  paddingY: 3,\n  borderRadius: 1\n}\n\nconst Body = () => {\n  const items= useSelector(selectTodos)\n\n  const content = () => {\n    if(!items.length) {\n      const text = 'You have no todos'\n      return(<Typography variant=\"overline\">{text}</Typography>)\n    }\n    return (\n      items.map(item => <TodoItem text={item.text} id={item.id} key={item.id}/>)\n    )\n  }\n\n  return (\n      <Box sx={style}>\n        <Stack spacing={2}>\n          {\n            content()\n          }\n        </Stack>\n      </Box>\n  )\n}\n\nexport default Body\n","import React, {useState} from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectPopupStatus, selectEditingId, selectText, popup} from \"../../store/todoSlice\";\n\nconst EditPopup = () => {\n\n  const dispatch = useDispatch()\n  const open = useSelector(selectPopupStatus)\n  const id = useSelector(selectEditingId)\n  const [error, setError] = useState(false)\n  const [labelVal, setLabelVal] = useState('Change task')\n  const text = useSelector(selectText)\n  const [inputVal, setInputVal] = useState(text)\n\n  const closePopup = () => {\n    dispatch(popup({\n      show: false\n    }))\n    setInputVal('')\n  }\n\n  const getInputVal = (e) => {\n    setInputVal(e.target.value)\n  }\n\n  const confirmNewValue = () => {\n    if(inputVal.trim() === '') {\n      setError(true)\n      setLabelVal('Input not empty value')\n      return\n    }\n    dispatch(popup({\n      show: false,\n      text: inputVal,\n      itemId: id,\n      newText: inputVal\n    }))\n  }\n\n  return (\n      <div>\n        <Dialog fullWidth={true} maxWidth={'sm'} open={open} onClose={closePopup}>\n          <DialogTitle>Edit task</DialogTitle>\n          <div>\n            <DialogContent>\n              <TextField\n                onChange={getInputVal}\n                error={error}\n                label={labelVal}\n                value={inputVal}\n                placeholder=\"Your task\"\n                size=\"normal\"\n                multiline\n                fullWidth\n              />\n            </DialogContent>\n          </div>\n          <DialogActions>\n            <Button onClick={closePopup}>Cancel</Button>\n            <Button onClick={confirmNewValue}>Confirm</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  )\n}\n\nexport default EditPopup","import React from \"react\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Header from \"../Header/Header\";\nimport Body from \"../Body/Body\";\nimport {useSelector} from \"react-redux\";\nimport {selectPopupStatus} from \"../../store/todoSlice\";\nimport EditPopup from \"../editPopup/EditPopup\";\n\nconst App = () => {\n  const isPopupShow = useSelector(selectPopupStatus)\n\n  return(\n      <Box sx={{paddingY: 5, minHeight: '100vh'}}>\n        <CssBaseline />\n        <Container maxWidth=\"md\">\n          <Header/>\n          <Body/>\n        </Container>\n        {\n          isPopupShow &&\n          <EditPopup/>\n        }\n      </Box>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice'\n\nconst store = configureStore({\n  reducer: {\n    todo: todoReducer\n  },\n});\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from \"./Components/App/App\";\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}